<!OPS, Version = 6.4>

<!Document,
	Default Printer	="cx",
	Final Output Device	="cx">

<!Font Definitions,
	F136	=Swiss 12,
	F21	=Typewriter 10,
	F27	=Classic 10,
	F30	=Classic 12,
	F31	=Classic 12 Bold,
	F32	=Classic 12 Italic,
	F34	=Classic 14 Bold,
	F48	=Modern 10 Italic,
	F6	=Symbols 12,
	F84	=Thames 10>

<!Page,
	Starting Page # = 	Inherit>

<!Autonumber Stream, List, 1>

<!Autonumber Stream, Outline, 3,
	Level 1 Symbol Type	=Upper Roman,
	Level 2 Symbol Type	=Upper Alpha>

<!Class, bullet,
	Bottom Margin	=0 Inches,
	First Indent	=-0.25 Inches,
	Font	=F30,
	Left Margin	=0.50 Inches,
	Top Margin	=0.083 Inches>

<!Class, caption,
	Bottom Margin	=0.07 Inches,
	Font	=F30,
	Line Spacing	=1.100 Lines,
	Top Margin	=0.07 Inches>

<!Class, fixed,
	Alignment	=Left,
	Allow Page Break Within	=No,
	Bottom Margin	=0.083 Inches,
	Font	=F21,
	Hyphenation	=Off,
	Left Margin	=0.50 Inches,
	Left Tab	=0/0.64*10 Inches,
	Line Spacing	=1.308 Lines,
	Right Margin	=-1 Inches,
	Top Margin	=0.083 Inches>

<!Class, footnote,
	Bottom Margin	=0.07 Inches,
	First Indent	=-0.25 Inches,
	Font	=F30,
	Left Margin	=0.25 Inches,
	Line Spacing	=1.100 Lines,
	Top Margin	=0.07 Inches>

<!Class, header,
	Alignment	=Left,
	Allow Page Break After	=No,
	Allow Page Break Within	=No,
	Bottom Margin	=0 Inches,
	Font	=F34,
	Top Margin	=0.193 Inches>

<!Class, options,
	Allow Page Break Within	=No,
	Bottom Margin	=0 Inches,
	First Indent	=-1 Inches,
	Font	=F30,
	Hyphenation	=Off,
	Left Margin	=1.50 Inches,
	Left Tab	=0/0.75/1.50 Inches,
	Top Margin	=0.042 Inches>

<!Class, paragraph,
	Bottom Margin	=0 Inches,
	Font	=F30,
	Left Margin	=0.25 Inches,
	Top Margin	=0.083 Inches>

<!Class, subheader,
	Alignment	=Left,
	Allow Page Break After	=No,
	Allow Page Break Within	=No,
	Bottom Margin	=0 Inches,
	Font	=F31,
	Left Margin	=0.25 Inches,
	Top Margin	=0.097 Inches>

<!Class, suboption,
	Allow Page Break Within	=No,
	Bottom Margin	=0 Inches,
	First Indent	=-1 Inches,
	Font	=F30,
	Hyphenation	=Off,
	Left Margin	=2.50 Inches,
	Left Tab	=0/0.75/1.50 Inches,
	Top Margin	=0.042 Inches>

<!Master Frame,
	Name =			"At Anchor",
	Placement =		At Anchor,
	Vertical Alignment =	Bottom + 0.03 Inches,
	Width =			0.41 Inches,
	Height =		0.137 Inches,
	Diagram =
V6,
(g9,0,0
 (E15,0,0,5,1,1,0.053333,1,15,0,0,1,0,0,0,0,5,127,7,0,0,7,1,1,1,0.066667,0.06666
  7,6,6,0,0.066667,6))>

<!Master Frame,
	Name =			"Following Anchor",
	Placement =		Following Anchor,
	Horizontal Alignment =	Center,
	Width =			5.70 Inches,
	Height =		2.85 Inches,
	Diagram =
V6,
(g9,0,0
 (E15,0,0,5,1,1,0.053333,1,15,0,0,1,0,0,0,0,5,127,7,0,0,7,1,1,1,0.066667,0.06666
  7,6,6,0,0.066667,6))>

<!Master Frame,
	Name =			"Following Text",
	Placement =		Following Text,
	Horizontal Alignment =	Center,
	Width =			5.70 Inches,
	Height =		2.85 Inches,
	Diagram =
V6,
(g9,0,0
 (E15,0,0,5,1,1,0.053333,1,15,0,0,1,0,0,0,0,5,127,7,0,0,7,1,1,1,0.066667,0.06666
  7,6,6,0,0.066667,6))>

<!Master Frame,
	Name =			Bottom,
	Placement =		Bottom Of Page,
	Horizontal Alignment =	Center,
	Width =			5.70 Inches,
	Height =		2.85 Inches,
	Diagram =
V6,
(g9,0,0
 (E15,0,0,5,1,1,0.053333,1,15,0,0,1,0,0,0,0,5,127,7,0,0,7,1,1,1,0.066667,0.06666
  7,6,6,0,0.066667,6))>

<!Master Frame,
	Name =			Footnote,
	Placement =		Bottom Of Page,
	Horizontal Alignment =	Left,
	Same Page =		Yes,
	Width =			5.70 Inches,
	Height =		0.204 Inches,
	Diagram =
V6,
(g9,0,0
 (E15,0,0,5,1,1,0.053333,1,15,0,0,1,0,0,0,0,5,127,7,0,0,7,1,1,1,0.066667,0.06666
  7,6,6,0,0.066667,6))>

<!Master Frame,
	Name =			Top,
	Placement =		Top Of Page,
	Horizontal Alignment =	Center,
	Width =			5.70 Inches,
	Height =		2.85 Inches,
	Diagram =
V6,
(g9,0,0
 (E15,0,0,5,1,1,0.053333,1,15,0,0,1,0,0,0,0,5,127,7,0,0,7,1,1,1,0.066667,0.06666
  7,6,6,0,0.066667,6))>

<Page Header, Frame =
V6,
(g9,1,0
 (t14,1,4,5.698608,0.438782,2,7,0,0,,wst:clas12b,December\ 7\,\ 1989)
 (t14,2,4,2.849304,0.438782,1,7,0,0,,wst:clas12b,RCS\ directory\ template)
 (t14,3,4,0,0.438782,0,7,0,0,,wst:clas12b,link2rcs)
 (E15,0,0,5,1,1,0.053333,1,15,0,0,1,0,0,0,0.007813,5,127,7,0,0,7,1,1,1,0.066667,
  0.066667,6,6,0,0.066667,6))>

<Page Footer, Frame =
V6,
(g9,1,0
 (t14,1,4,5.698608,0.478772,2,7,0,0,,wst:clas10,)
 (t14,2,4,2.849304,0.478772,1,7,0,0,,wst:clas12b,-\ \X80a0\ -)
 (t14,3,4,0,0.478772,0,7,0,0,,wst:clas10,)
 (E15,0,0,5,1,1,0.053333,1,15,0,0,1,0,0,0,0,5,127,7,0,0,7,1,1,1,0.066667,0.06666
  7,6,6,0,0.066667,6))>

<header>

NAME

<paragraph>

<F31>link2rcs<F0> <#1f> rcs directory template

<header>

USAGE

<paragraph>

<F31>link2rcs<F32> [options] [file-specifications]

<header>

SYNOPSIS

<paragraph>

<F31>Link2rcs<F0> makes (an empty) template of an existing directory 
tree.  All directory names are copied; <#7f>RCS" directories are transformed 
into symbolic links pointing to the original tree.

<header>

DESCRIPTION

<paragraph>

<F31>Link2rcs<F0> is used to make a working copy of a source-controlled 
module which is configured in a tree of directories (e.g., bin, lib, 
include, src, with dependent subdirectories).  By making a template 
directory (i.e., with the same relative pathnames), you may check-out 
files and continue to develop the module.  By making symbolic links 
to the original set of <F32>rcs<F0> directories, <F31>link2rcs<F0> 
facilitates the use of <F32>rcs<F0>: <F31>ci<F0> and <F31>co<F0> 
assume that the <F32>rcs<F0> files are in a subdirectory named <#7f>RCS".

<header>

OPTIONS

<paragraph>

<F31>Link2rcs<F0> recognizes the following options:

<options>

-<F31>a<F0><Tab>process all directory names.  Like the <F31>ls<F0> 
option <#7f>-<F31>a<F0>", this enables the processing of names beginning 
with <#7f>.".

-<F31>d<F0> <F32>path<F0><Tab>specifies the destination directory.  
You must always specify this if you don't specify the <#7f>-<F31>s<F0>" 
option.

-<F31>m<F0><Tab>merge against destination, i.e., don't quit if a target 
directory or link is found.

-<F31>n<F0><Tab>(no-op) causes <F31>link2rcs<F0> to compute the modifications 
and to display them (according to the setting of <#7f>-<F31>q<F0>" 
and <#7f>-<F31>v<F0>"), but not to modify the target directory tree.

-<F31>r<F0><Tab>directs link2rcs to compute relative pathnames for 
the symbolic links which it creates.  Normally the links are made 
with an absolute pathname (e.g., <#7f><F136>/u1/foo/RCS<F0>").

-<F31>q<F0><Tab>(quiet) undoes <#7f>-<F31>v<F0>", eliminates most 
messages.

-<F31>s<F0> <F32>path<F0><Tab>specifies the source directory.  Normally 
you need not specify this; it defaults to <#7f>.".

-<F31>v<F0><Tab>(verbose) shows shell-command equivalents to the modifications 
which are made.

<header>

OPERATIONS

<paragraph>

Normally, you use <F31>link2rcs<F0> when constructing a development 
directory based on an existing source tree.  To copy an entire tree, 
change your shell's working directory to the source directory (i.e., 
using the <#7f>cd" command) and type

<fixed>

link2rcs -d <F48>dst_dir<F0> .

<paragraph>

where <F32>dst_dir<F0> is the name of the (existing) directory under 
which you wish to create the template directory, and the <#7f>." specifies 
the current working directory.  If you wish to copy only some of the 
directories, type their names instead of <#7f>.".

<F31>Link2rcs<F0> makes a list of all directories under the 
source directory and attempts to create a corresponding template under 
the destination directory.  Each time it finds a directory named <#7f>RCS" 
it makes a symbolic link; otherwise it makes directories to match 
those in the source tree.

If any of the names which <F31>link2rcs<F0> plans to create already 
exists, it halts with an error message (unless <#7f>-<F31>m<F0>" is 
specified).

When you have created the template tree, you may use <F31>rcsget<F0> 
to check-out files into the destination tree.

<header>

ENVIRONMENT

<paragraph>

<F31>Link2rcs<F0> is written in C and runs in a UNIX<F6>T<F0> environment.

<header>

FILES

<paragraph>

<F31>Link2rcs<F0> consists of a single binary file, <F136>link2rcs<F0>.

<header>

ANTICIPATED CHANGES

<paragraph>

For better integration and support of rcs, <F31>link2rcs<F0> should 
be able to prune directories from the list of those to be created 
if their RCS directories would have no applicable source files.

Certain systems, such as Apollo, support the use of environment variables 
in symbolic links.  These are more readable than normal symbolic links.  
It would be nice to be able to generate these by <F31>link2rcs<F0>.

<header>

SEE ALSO

<paragraph>

rcsget, checkout, permit, rcs<SP>(1)

<header>

AUTHOR:

<paragraph>

Thomas Dickey (Software Productivity Consortium).

