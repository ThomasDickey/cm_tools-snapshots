<!OPS, Version = 6.4>

<!Document,
	Default Printer	="cx",
	Final Output Device	="cx">

<!Font Definitions,
	F21	=Typewriter 10,
	F27	=Classic 10,
	F30	=Classic 12,
	F31	=Classic 12 Bold,
	F32	=Classic 12 Italic,
	F34	=Classic 14 Bold,
	F49	=Modern 12,
	F6	=Symbols 12,
	F84	=Thames 10>

<!Page,
	Starting Page # = 	Inherit>

<!Autonumber Stream, List, 1>

<!Autonumber Stream, Outline, 3,
	Level 1 Symbol Type	=Upper Roman,
	Level 2 Symbol Type	=Upper Alpha>

<!Class, bullet,
	Bottom Margin	=0 Inches,
	First Indent	=-0.25 Inches,
	Font	=F30,
	Left Margin	=0.50 Inches,
	Top Margin	=0.083 Inches>

<!Class, caption,
	Bottom Margin	=0.07 Inches,
	Font	=F30,
	Line Spacing	=1.100 Lines,
	Top Margin	=0.07 Inches>

<!Class, fixed,
	Alignment	=Left,
	Allow Page Break Within	=No,
	Bottom Margin	=0.083 Inches,
	Font	=F21,
	Hyphenation	=Off,
	Left Margin	=0.50 Inches,
	Left Tab	=0/0.64*10 Inches,
	Line Spacing	=1.308 Lines,
	Right Margin	=-1 Inches,
	Top Margin	=0.083 Inches>

<!Class, footnote,
	Bottom Margin	=0.07 Inches,
	First Indent	=-0.25 Inches,
	Font	=F30,
	Hyphenation	=Off,
	Left Margin	=0.25 Inches,
	Line Spacing	=1.100 Lines,
	Top Margin	=0.07 Inches>

<!Class, header,
	Alignment	=Left,
	Allow Page Break After	=No,
	Allow Page Break Within	=No,
	Bottom Margin	=0 Inches,
	Font	=F34,
	Top Margin	=0.193 Inches>

<!Class, options,
	Allow Page Break Within	=No,
	Bottom Margin	=0 Inches,
	First Indent	=-1 Inches,
	Font	=F30,
	Hyphenation	=Off,
	Left Margin	=1.50 Inches,
	Left Tab	=0/0.75/1.50 Inches,
	Top Margin	=0.042 Inches>

<!Class, paragraph,
	Bottom Margin	=0 Inches,
	Font	=F30,
	Left Margin	=0.25 Inches,
	Top Margin	=0.083 Inches>

<!Class, subheader,
	Alignment	=Left,
	Allow Page Break After	=No,
	Allow Page Break Within	=No,
	Bottom Margin	=0 Inches,
	Font	=F31,
	Left Margin	=0.25 Inches,
	Top Margin	=0.097 Inches>

<!Class, suboption,
	Allow Page Break Within	=No,
	Bottom Margin	=0 Inches,
	First Indent	=-1 Inches,
	Font	=F30,
	Hyphenation	=Off,
	Left Margin	=2.50 Inches,
	Left Tab	=0/0.75/1.50 Inches,
	Top Margin	=0.042 Inches>

<!Master Frame,
	Name =			"At Anchor",
	Placement =		At Anchor,
	Vertical Alignment =	Bottom + 0.03 Inches,
	Width =			0.41 Inches,
	Height =		0.137 Inches,
	Diagram =
V6,
(g9,0,0
 (E15,0,0,5,1,1,0.053333,1,15,0,0,1,0,0,0,0,5,127,7,0,0,7,1,1,1,0.066667,0.06666
  7,6,6,0,0.066667,6))>

<!Master Frame,
	Name =			"Following Anchor",
	Placement =		Following Anchor,
	Horizontal Alignment =	Center,
	Width =			5.70 Inches,
	Height =		2.85 Inches,
	Diagram =
V6,
(g9,0,0
 (E15,0,0,5,1,1,0.053333,1,15,0,0,1,0,0,0,0,5,127,7,0,0,7,1,1,1,0.066667,0.06666
  7,6,6,0,0.066667,6))>

<!Master Frame,
	Name =			"Following Text",
	Placement =		Following Text,
	Horizontal Alignment =	Center,
	Width =			5.70 Inches,
	Height =		2.85 Inches,
	Diagram =
V6,
(g9,0,0
 (E15,0,0,5,1,1,0.053333,1,15,0,0,1,0,0,0,0,5,127,7,0,0,7,1,1,1,0.066667,0.06666
  7,6,6,0,0.066667,6))>

<!Master Frame,
	Name =			Bottom,
	Placement =		Bottom Of Page,
	Horizontal Alignment =	Center,
	Width =			5.70 Inches,
	Height =		2.85 Inches,
	Diagram =
V6,
(g9,0,0
 (E15,0,0,5,1,1,0.053333,1,15,0,0,1,0,0,0,0,5,127,7,0,0,7,1,1,1,0.066667,0.06666
  7,6,6,0,0.066667,6))>

<!Master Frame,
	Name =			Footnote,
	Placement =		Bottom Of Page,
	Horizontal Alignment =	Left,
	Same Page =		Yes,
	Width =			5.70 Inches,
	Height =		0.204 Inches,
	Diagram =
V6,
(g9,0,0
 (E15,0,0,5,1,1,0.053333,1,15,0,0,1,0,0,0,0,5,127,7,0,0,7,1,1,1,0.066667,0.06666
  7,6,6,0,0.066667,6))>

<!Master Frame,
	Name =			Top,
	Placement =		Top Of Page,
	Horizontal Alignment =	Center,
	Width =			5.70 Inches,
	Height =		2.85 Inches,
	Diagram =
V6,
(g9,0,0
 (E15,0,0,5,1,1,0.053333,1,15,0,0,1,0,0,0,0,5,127,7,0,0,7,1,1,1,0.066667,0.06666
  7,6,6,0,0.066667,6))>

<Page Header, Frame =
V6,
(g9,1,0
 (t14,1,4,5.698608,0.438782,2,7,0,0,,wst:clas12b,September\ 2\,\ 1988)
 (t14,2,4,2.849304,0.438782,1,7,0,0,,wst:clas12b,RCS\ Check-in\ Script)
 (t14,3,4,0,0.438782,0,7,0,0,,wst:clas12b,rcsput)
 (E15,0,0,5,1,1,0.053333,1,15,0,0,1,0,0,0,0.007813,5,127,7,0,0,7,1,1,1,0.066667,
  0.066667,6,6,0,0.066667,6))>

<Page Footer, Frame =
V6,
(g9,1,0
 (t14,1,4,5.698608,0.478772,2,7,0,0,,wst:clas10,)
 (t14,2,4,2.849304,0.478772,1,7,0,0,,wst:clas12b,-\ \X80a0\ -)
 (t14,3,4,0,0.478772,0,7,0,0,,wst:clas10,)
 (E15,0,0,5,1,1,0.053333,1,15,0,0,1,0,0,0,0,5,127,7,0,0,7,1,1,1,0.066667,0.06666
  7,6,6,0,0.066667,6))>

<header>

NAME

<paragraph>

<F31>rcsput<F0> <#1f> RCS check-in script

<header>

USAGE

<paragraph>

<F31>rcsput<F32> [options] [file-specifications]

<header>

SYNOPSIS

<paragraph>

<F31>Rcsput<F0> is a simple, easy to use interface to <F32>rcs<F0> 
(<F31>r<F0>evision <F31>c<F0>ontrol <F31>s<F0>ystem).  For each 
file specified as input, it checks differences against the previously 
archived version and prompts you for change history comments.

<header>

DESCRIPTION

<paragraph>

<F31>Rcsput<F0> uses the <F32>rcs<F0> utility <F31>ci<F0>  to maintain 
versions of a given source file in a dependent directory named <#7f>RCS":

<bullet>

<F6>S<F0><Tab>It checks to ensure that each file is indeed a text 
file (so that you do not accidentally archive <#7f>.o" files, for 
example).

<F6>S<F0><Tab>If you give <F31>rcsput<F0> a directory name, it 
will recur, checking-in files in the directory.

<F6>S<F0><Tab>For each file which has a corresponding <#7f>,v" file, <F31>rcs
put<F0> compares the two (using <F31>diff<F0>) and pipes the result 
through the pager.

<F6>S<F0><Tab>An option is provided so that you may direct <F31>rcsput<F0> 
to perform the differencing without checking the file into rcs.

<F6>S<F0><Tab>The <#7f>,v" file is post-processed by <F31>rcsput<F0> 
so that the check-in date matches the file's modification date.

<paragraph>

The last point is the fundamental advantage offered by <F31>rcsput<F0>.  
The ordinary <F32>rcs<F0> methodology uses the current date as the 
check-in date.  This works well only for large projects in which a 
central project administrator is responsible for controlling the versions 
of source files.  It does not work well for small projects, for which <F32>rcs
<F0>'s primary advantage is its compact storage of multiple versions 
of a file.

By using the file's modification date as a reference, you can more 
easily back up to a meaningful version <#1f> by date, rather than 
version number.

<F31>Rcsput<F0> integrates all of the functions used in the <F32>rcs<F0> 
check-in process into one utility program.

<header>

OPTIONS

<paragraph>

Some of the options which you may specify to <F31>rcsput<F0> are 
passed through to the underlying <F31>ci<F0> utility.  Others represent 
extensions:

<options>

-<F31>b<F0><Tab>is passed to <F31>diff<F0>, and directs it 
to ignore trailing blanks on a line, and to treat repeated blanks 
as a single blank.

-<F31>c<F0><Tab>directs <F31>rcsput<F0> to use <F31>cat<F0> rather 
than the <F49>PAGER<F0> (usually <F31>more<F0>) to display differences.  
This is most useful in an Apollo pad, since the <F31>more<F0> program 
would otherwise switch to VT100 emulator mode.

-<F31>d<F0><Tab>instructs <F31>rcsput<F0> to test for differences, 
but not to check the files into <F32>rcs<F0>.

-<F31>h<F0><Tab>is passed to <F31>diff<F0>, and permits it to handle 
huge differences.

-<F31>L<F0> <F32>file<F0><Tab>causes <F31>rcsput<F0> to generate 
a log-file of the files which are processed, and all differences which 
are encountered.  The log-file is inherited in recursion to lower 
directory levels (i.e., it is written to the same place).

<header>

OPERATIONS

<paragraph>

The <F31>rcsput<F0> utility is designed for use in small development 
projects.  The methodology for this tool follows:

<bullet>

<F6>S<F0><Tab>Develop source files <#7f>normally".  Each file should 
contain rcs keywords (see <F32>ci<SP>(1)<F0>) so that you will be 
able to distinguish checked-out files.  The rcs keywords should appear 
at the top of your source file, for consistency.  In C language programs, 
the convention is to make a string which will permit the <F31>ident<F0> 
utility to show the versions of the modules which make up a program:

<fixed>

#ifndef<Tab>lint<HR>
static<Tab>char<Tab>ident[] = "$Header: /users/source/archives/cm_tools.vcs/user/RCS/rcsput.doc,v 4.0 1989/06/15 15:23:44 ste_cm Rel $";<HR>
#endif<Tab>lint

<bullet>

<F6>S<F0><Tab>Periodically archive (with <F31>rcsput<F0>) those versions 
of files which you wish to keep
<Frame,
	Name =			Footnote,
	Placement =		Bottom Of Page,
	Horizontal Alignment =	Left,
	Same Page =		Yes,
	Width =			5.70 Inches,
	Height =		0.667 Inches,
	Page # =		2,
	Diagram =
V6,
(g9,1,0
 (T12,1,12,0.066667,0.066667,5,127,5,7,127,8,0,3,
<!Page,
	Height	=0.533 Inches,
	Revision Bar Placement	=Left,
	Width	=5.547 Inches>
<footnote>

<F6>!<F0><Tab>You should never have programs which have new features 
which you wish to keep, while there are defects in other parts of 
the program.  That would be an unsound approach to development!

<End Text>)
 (v6,2,0,0.026667,0,1.026666,0,7,0,8,0)
 (E15,0,0,5,1,1,0.053333,1,15,0,0,1,0,0,0,0,5,127,7,0,0,7,1,1,1,0.066667,0.06666
  7,6,6,0,0.066667,6))>
<F6>!<F0>.

<F6>S<F0><Tab>When you reach the point of releasing the program, ensure 
that all source files have been checked-in.  The directory editor 
(<F31>ded<F0>) is useful for reviewing the check-in dates.

<F6>S<F0><Tab>Copy the directory containing your program to the release 
directory.  Purge all files, except those which are stored in the <F32>rcs
<F0> subdirectories.  
Use <F31>rcsget<F0> to extract the files
<Frame,
	Name =			Footnote,
	Placement =		Bottom Of Page,
	Horizontal Alignment =	Left,
	Same Page =		Yes,
	Width =			5.70 Inches,
	Height =		0.433 Inches,
	Page # =		3,
	Diagram =
V6,
(g9,1,0
 (T12,1,12,0.066667,0.066667,5,127,5,7,127,8,0,3,
<!Page,
	Height	=0.35 Inches,
	Revision Bar Placement	=Left,
	Width	=5.547 Inches>
<footnote>

<F6>@<F0><Tab>The unadorned <F31>co<F0> utility will work, of course, 
but it retains the file modification dates.  You may also use checkout 
to retain file dates.

<End Text>)
 (v6,2,0,-0.12,0,0.88,0,7,0,8,0)
 (E15,0,0,5,1,1,0.053333,1,15,0,0,1,0,0,0,0,5,127,7,0,0,7,1,1,1,0.066667,0.06666
  7,6,6,0,0.066667,6))>
<F6>@<F0>.

<F6>S<F0><Tab>Ensure that all files have been checked-in and released.  
You may use <F31>diff<F0> to compare the directories <#1f> the only 
differences should be the substituted <F32>rcs<F0> keywords.

<F6>S<F0><Tab>Build the released version of your program.  All files 
should be present.  No embedded path names should refer to your development 
copy.  To ensure good isolation, you may change the permissions on 
your development directory temporarily.

<paragraph>

When checking files into <F32>rcs<F0>, it is a good idea to make 
a test run (using the <#7f>-<F31>d<F0>" option) so that you can inspect 
the differences.  For example, you may have forgotten to remove (or 
bypass) debugging stubs.  Or, you may have been editing a checked-out 
file (with the <F32>rcs<F0> keywords substituted).  <F31>Rcsput<F0> 
would archive this anyway.

<header>

ENVIRONMENT

<paragraph>

<F31>Rcsput<F0> is a Bourne shell script.  On Apollo DOMAIN/IX, it 
uses System<SP>5 features including <F32>dirname<SP>(1)<F0> and <F32>getopt<SP>
(1)<F0>.

Environment variables imported by <F31>rcsput<F0> include:

<options>

<F49>PAGER<F0><Tab>identifies the program to use in displaying differences 
between the file which is being checked in, and the previously archived 
version.  There may be a lot of differences <#1f> more than can be 
shown on one screen.

<header>

FILES

<paragraph>

<F31>Rcsput<F0> uses the following files

<options>

<F49>rcsput<F0><Tab>the Bourne shell script

<F49>checkin<F0><Tab>A utility which invokes <F31>ci<F0>, and modifies 
the <F32>rcs<F0> <#7f>,v" file after check-in so that the check-in 
date matches the file's modification date.

<header>

ANTICIPATED CHANGES

<paragraph>

Provide a mechanism for inserting dummy version numbers so that <F31>rcsput
<F0> can bump the release number (for genuine major releases).  Currently, 
the revision numbers are interpreted only as the underlying RCS utilities 
do 
them.  To handle major release numbers requires a scan of the 
group of files affected to ensure that there are no conflicts.

<header>

SEE ALSO

<paragraph>

checkin, rcsget, checkout, ded, ci<SP>(1), co<SP>(1), diff<SP>(1), 
ident<SP>(1)

<header>

AUTHOR:

<paragraph>

Thomas Dickey (Software Productivity Consortium).

