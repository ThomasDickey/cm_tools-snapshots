<!OPS, Version = 5.2>

<!Document,
	Final Output Device =	"cx",
	Default Printer =	"cx">

<!Font Definitions,
	F27 = Classic 10,
	F30 = Classic 12,
	F21 = Typewriter 10,
	F34 = Classic 14 Bold,
	F31 = Classic 12 Bold,
	F32 = Classic 12 Italic,
	F49 = Modern 12,
	F6 = Symbols 12>

<!Page,
	Starting Page # = 	Inherit>

<!Autonumber Stream, List, 1>

<!Autonumber Stream, Outline, 3,
	Level 1 Symbol Type =	UPPER ROMAN,
	Level 2 Symbol Type =	UPPER ALPHA>

<!Class, bullet,
	Top Margin =		0.083 inches,
	Bottom Margin =		0 inches,
	Left Margin =		0.50 inches,
	First Indent =		-0.25 inches,
	Font =			F30>

<!Class, fixed,
	Top Margin =		0.083 inches,
	Bottom Margin =		0.083 inches,
	Left Margin =		0.50 inches,
	Right Margin =		-1 inches,
	Line Spacing =		1.308 lines,
	Alignment =		Left,
	Font =			F21,
	Hyphenation =		off,
	Allow Page Break Within = no,
	Left Tab =		0/0.64*10 inches>

<!Class, header,
	Top Margin =		0.193 inches,
	Bottom Margin =		0 inches,
	Alignment =		Left,
	Font =			F34,
	Allow Page Break Within = no,
	Allow Page Break After = no>

<!Class, options,
	Top Margin =		0.042 inches,
	Bottom Margin =		0 inches,
	Left Margin =		1.50 inches,
	First Indent =		-1 inches,
	Font =			F30,
	Hyphenation =		off,
	Allow Page Break Within = no,
	Left Tab =		0/0.75/1.50 inches>

<!Class, paragraph,
	Top Margin =		0.083 inches,
	Bottom Margin =		0 inches,
	Left Margin =		0.25 inches,
	Font =			F30>

<!Class, subheader,
	Top Margin =		0.097 inches,
	Bottom Margin =		0 inches,
	Left Margin =		0.25 inches,
	Alignment =		Left,
	Font =			F31,
	Allow Page Break Within = no,
	Allow Page Break After = no>

<!Master Frame,
	Name =			"At Anchor",
	Placement =		At Anchor,
	Width =			0.41 inches,
	Height =		0.137 inches,
	Vertical Alignment =	0.03 inches,
	Diagram =
V4,
(g9,0,0
 (E10,0,0,0,1,1,0.053333,1,15,0,0,1,0,0,0,1,0,1,1,0.066667,0.066667,6,6,0,0.066
  667,6))>

<Page Header, Frame =
V4,
(g9,1,0
 (t8,1,4,5.698608,0.438782,2,17,@nnclas12b,March\ 13\,\ 1989)
 (t8,2,4,2.849304,0.438782,1,17,@nnclas12b,RCS\ \177ci"\ Package)
 (t8,3,4,0,0.438782,0,17,@nnclas12b,checkin)
 (E10,0,0,0,1,1,0.053333,1,15,0,0,1,0,0,0,0,1,1,1,0.066667,0.066667,6,6,0,0.066
  667,6))>

<Page Footer, Frame =
V4,
(g9,1,0
 (t8,1,4,5.698608,0.478772,2,17,@nnclas10,)
 (t8,2,4,2.849304,0.478772,1,17,@nnclas12b,-\ \240\ -)
 (t8,3,4,0,0.478772,0,17,@nnclas10,)
 (E10,0,0,0,1,1,0.053333,1,15,0,0,1,0,0,0,0,1,1,1,0.066667,0.066667,6,6,0,0.066
  667,6))>

<header>

<|,1>NAME

<paragraph>

<F31>checkin<F0> <#1f> rcs check-in utility

<header>

USAGE

<paragraph>

<F31>checkin<F32> [options] [file-specifications]

<header>

SYNOPSIS

<paragraph>

<F31>Checkin<F0> is an extension of the RCS utility <F31>ci<F0>.  
It uses the file's modification date rather than the current date 
as the RCS delta-date.

<header>

DESCRIPTION

<paragraph>

<F31>Checkin<F0> uses the <F32>rcs<F0> utility <F31>ci<F0>.  It 
is normally invoked from the <F31>rcsput<F0> script, but may be invoked 
in a standalone manner.  <F31>Checkin<F0> differs from <F31>ci<F0> 
primarily in its treatment of the delta date: after invoking <F31>ci<F0>, 
<F31>checkin<F0> modifies the delta-date in the archive to reflect 
the file's modification date.

This is the fundamental advantage offered by <F31>checkin<F0>.  The 
ordinary <F32>rcs<F0> methodology uses the current date as the check-in 
date.  This works well only for large projects in which a central 
project administrator is responsible for controlling the versions 
of source files.  It does not work well for small projects, for which <F32>rcs
<F0>'s primary advantage is its compact storage of multiple versions 
of a file.

By using the file's modification date as a reference, you can more 
easily back up to a meaningful version <#1f> by date, rather than 
version number.

<subheader>

Archive Directory

<paragraph>

If the archive directory (e.g., <#7f>./RCS") does not exist, <F31>checkin<F0> 
creates it before invoking the <F31>ci<F0> program.

<subheader>

Set-UID Operation

<paragraph>

The rcs <F31>ci<F0> and <F31>co<F0> utilities work to a degree in 
set-uid mode (i.e., the <#7f>u+s" protection is set on the programs).  
However, the code assumes that the effective uid is <F30@U>root<F0>, 
and does not concern itself with maintaining file ownership.

The <F31>checkin<F0> package is able to run as a set-uid process 
for any particular user (e.g., the administrator of a project).  For 
example, suppose that <F49>/proj<F0> is the location of project-specific 
tools, and is owned by <F49>admin<F0>.  Then

<fixed>

cp checkin /proj<Tab><Tab># admin now owns this copy<HR>
chmod 4755 /proj/checkin<Tab># sets u+s mode

<paragraph>

<|,2>Thereafter, users who invoke <F49>/proj/checkin<F0> will have 
the rights of <F49>admin<F0> <#1f> for this application.  They may 
check into <F32>rcs<F0> any files which they own, into archives which <F49>adm
in<F0> owns.  <F31>Checkin<F0> will maintain <F49>admin<F0>'s ownership 
of the archive files, and the user's ownership of his working files.

<F30@R>If <F31@R>checkin<F30@R> does not need the set-uid rights (e.g., 
if the user already owns the archive), <F31@R>checkin<F30@R> resets its 
effective uid to the user's.  This permits a single copy of <F31@R>checkin<F30@R> 
to be used for both configuration management as well as individual 
developers.

<subheader>

Sharing RCS Archives

<paragraph>

<F31>Checkin<F0> provides support for shared files by using <F32>rcs<F0>'s 
access lists, and providing special handling for set-uid operation:

<bullet>

<F6>S<F0><Tab>When you first archive a file using <F31>checkin<F0>, 
it invokes the <F31>rcs<F0> administrative utility to initialize 
the access list of the file.  It puts the <F30@U>effective<F0> user 
into the list.

<F6>S<F0><Tab>If <F31>checkin<F0> is running in set-uid mode, it 
puts the <F30@U>real<F0> user on the access list as well.

<paragraph>

With the access list is initialized, only those users who appear on 
an access list may place locks on files, even when running in set-uid 
mode.

<subheader>

<F31@R>Directory-Level Permissions

<paragraph>

<F30@R>Before attempting to create or lock an archive file, <F31@R>checkin<F30@R> 
looks first for the directory-level permissions which may be set with 
the <F31@R>permit<F30@R> utility.  If they exist, <F31@R>checkin<F30@R> limits 
further access rights to those permitted.

<header>

OPTIONS

<paragraph>

<F31>Checkin<F0> recognizes all of the <#7f><F31>ci<F0>" options.

If the <#7f>-<F31>k<F0>" option is used, <F31>checkin<F0> supplies 
a default log-message

<fixed>

FROM_KEYS

<header>

OPERATIONS

<paragraph>

<F31>Checkin<F0> is used exactly as one would use <F31>ci<F0>.  
Place a lock on the file using the <#7f>-<F31>l<F0>" option with <F31>ci<F0> 
(or with <F31>co<F0>) when you wish to edit a file.  Check the file 
in using the <#7f>-<F31>u<F0>" option to retain a working copy after 
modification.

<header>

ENVIRONMENT

<paragraph>

<F31>Checkin<F0> is a C-language program.  It invokes <F31>ci<F0> <F30@R>(with 
an explicit path, to protect against mishaps in set-uid mode)<F0>, 
and performs pre- and 
<|,3>postprocessing of the archive and working file to determine 
the version to which the file's modification date applies.

<F31>Checkin<F0> uses the following environment variables:

<options,
	Left Tab =		0/0.25 inches>

<F49>RCS_BASE<F0><Tab>is used to specify a default value for initial 
revision numbers.  If the user does not specify the initial version 
number of a file, <F31>ci<F0> assigns the value <#7f>1.1".  This 
is used to support the use of module-level version numbers, while 
preserving the relationship between changes and revisions: a new version 
is made only if the file is changed.

<F30@R><Tab>The directory-level revision set by the <F31@R>permit<F30@R> 
utility may override this environment variable.<F0> See <F32>baseline<F0> 
and <F32@R>permit<F0> for more details.

<options>

<F49>RCS_DIR<F0><Tab>if defined, specifies the directory in which <F32>rcs
<F0> archive files are found.  Normally files are found in <#7f>./RCS".

<options,
	Left Tab =		0/0.25 inches>

<F49>TZ<F0><Tab>is the unix time zone, which is overridden internally 
so that file modification dates are independent of the local time 
zone.

<header>

FILES

<paragraph>

<F31>Checkin<F0> uses the following files

<options>

<F49>ci<F0><Tab>the RCS check-in program

<F49>rcs<F0><Tab>the RCS administrative program

<header>

ANTICIPATED CHANGES

<paragraph>

<F31>Checkin<F0> does not currently handle branch deltas.

<header>

SEE ALSO

<paragraph>

baseline, rcsput, <F30@R>permit, <F0>ded, ci<SP>(1), co<SP>(1), rcs<SP>(1)

<header>

AUTHOR:

<paragraph>

Thomas Dickey (Software Productivity Consortium).

