<!OPS, Version = 5.2>

<!Document,
	Final Output Device =	"cx",
	Default Printer =	"cx">

<!Font Definitions,
	F27 = Classic 10,
	F30 = Classic 12,
	F21 = Typewriter 10,
	F34 = Classic 14 Bold,
	F31 = Classic 12 Bold,
	F32 = Classic 12 Italic,
	F49 = Modern 12,
	F6 = Symbols 12>

<!Page>

<!Autonumber Stream, List, 1>

<!Autonumber Stream, Outline, 3,
	Level 1 Symbol Type =	UPPER ROMAN,
	Level 2 Symbol Type =	UPPER ALPHA>

<!Class, bullet,
	Top Margin =		0.083 inches,
	Bottom Margin =		0 inches,
	Left Margin =		0.50 inches,
	First Indent =		-0.25 inches,
	Font =			F30>

<!Class, caption,
	Top Margin =		0.07 inches,
	Bottom Margin =		0.07 inches,
	Line Spacing =		1.100 lines,
	Font =			F30>

<!Class, fixed,
	Top Margin =		0.083 inches,
	Bottom Margin =		0.083 inches,
	Left Margin =		0.50 inches,
	Right Margin =		-1 inches,
	Line Spacing =		1.308 lines,
	Alignment =		Left,
	Font =			F21,
	Hyphenation =		off,
	Allow Page Break Within = no,
	Left Tab =		0/0.64*10 inches>

<!Class, footnote,
	Top Margin =		0.07 inches,
	Bottom Margin =		0.07 inches,
	Left Margin =		0.25 inches,
	First Indent =		-0.25 inches,
	Line Spacing =		1.100 lines,
	Font =			F30>

<!Class, header,
	Top Margin =		0.193 inches,
	Bottom Margin =		0 inches,
	Alignment =		Left,
	Font =			F34,
	Allow Page Break Within = no,
	Allow Page Break After = no>

<!Class, options,
	Top Margin =		0.042 inches,
	Bottom Margin =		0 inches,
	Left Margin =		1.50 inches,
	First Indent =		-1 inches,
	Font =			F30,
	Hyphenation =		off,
	Allow Page Break Within = no,
	Left Tab =		0/0.75/1.50 inches>

<!Class, paragraph,
	Top Margin =		0.083 inches,
	Bottom Margin =		0 inches,
	Left Margin =		0.25 inches,
	Font =			F30>

<!Class, subheader,
	Top Margin =		0.097 inches,
	Bottom Margin =		0 inches,
	Left Margin =		0.25 inches,
	Alignment =		Left,
	Font =			F31,
	Allow Page Break Within = no,
	Allow Page Break After = no>

<!Class, suboption,
	Top Margin =		0.042 inches,
	Bottom Margin =		0 inches,
	Left Margin =		2.50 inches,
	First Indent =		-1 inches,
	Font =			F30,
	Hyphenation =		off,
	Allow Page Break Within = no,
	Left Tab =		0/0.75/1.50 inches>

<!Master Frame,
	Name =			"At Anchor",
	Placement =		At Anchor,
	Width =			0.41 inches,
	Height =		0.137 inches,
	Vertical Alignment =	0.03 inches,
	Diagram =
V4,
(g9,32767,0
 (E10,0,0,0,1,1,0.053333,1,15,0,0,1,0,0,0,0,1,1,1,0.066667,0.066667,6,6,0,0.066
  667,6))>

<!Master Frame,
	Name =			Bottom,
	Placement =		Bottom of Page,
	Horizontal Alignment =	Center,
	Width =			5.70 inches,
	Height =		2.85 inches,
	Diagram =
V4,
(g9,32767,0
 (E10,0,0,0,1,1,0.053333,1,15,0,0,1,0,0,0,0,1,1,1,0.066667,0.066667,6,6,0,0.066
  667,6))>

<!Master Frame,
	Name =			"Following Anchor",
	Placement =		Following Anchor,
	Horizontal Alignment =	Center,
	Width =			5.70 inches,
	Height =		2.85 inches,
	Diagram =
V4,
(g9,32767,0
 (E10,0,0,0,1,1,0.053333,1,15,0,0,1,0,0,0,0,1,1,1,0.066667,0.066667,6,6,0,0.066
  667,6))>

<!Master Frame,
	Name =			"Following Text",
	Placement =		Following Text,
	Horizontal Alignment =	Center,
	Width =			5.70 inches,
	Height =		2.85 inches,
	Diagram =
V4,
(g9,32767,0
 (E10,0,0,0,1,1,0.053333,1,15,0,0,1,0,0,0,0,1,1,1,0.066667,0.066667,6,6,0,0.066
  667,6))>

<!Master Frame,
	Name =			Footnote,
	Placement =		Bottom of Page,
	Horizontal Alignment =	Left,
	Same Page =		yes,
	Width =			5.70 inches,
	Height =		0.204 inches,
	Diagram =
V4,
(g9,32767,0
 (E10,0,0,0,1,1,0.053333,1,15,0,0,1,0,0,0,0,1,1,1,0.066667,0.066667,6,6,0,0.066
  667,6))>

<!Master Frame,
	Name =			Top,
	Placement =		Top of Page,
	Horizontal Alignment =	Center,
	Width =			5.70 inches,
	Height =		2.85 inches,
	Diagram =
V4,
(g9,32767,0
 (E10,0,0,0,1,1,0.053333,1,15,0,0,1,0,0,0,0,1,1,1,0.066667,0.066667,6,6,0,0.066
  667,6))>

<Page Header, Frame =
V4,
(g9,1,0
 (t8,1,4,5.698608,0.438782,2,17,@nnclas12b,September\ 2\,\ 1988)
 (t8,2,4,2.849304,0.438782,1,17,@nnclas12b,RCS\ \177ci"\ Package)
 (t8,3,4,0,0.438782,0,17,@nnclas12b,checkin)
 (E10,0,0,0,1,1,0.053333,1,15,0,0,1,0,0,0,0,1,1,1,0.066667,0.066667,6,6,0,0.066
  667,6))>

<Page Footer, Frame =
V4,
(g9,1,0
 (t8,1,4,5.698608,0.478772,2,17,@nnclas10,)
 (t8,2,4,2.849304,0.478772,1,17,@nnclas12b,-\ \240\ -)
 (t8,3,4,0,0.478772,0,17,@nnclas10,)
 (E10,0,0,0,1,1,0.053333,1,15,0,0,1,0,0,0,0,1,1,1,0.066667,0.066667,6,6,0,0.066
  667,6))>

<header>

<|,1>NAME

<paragraph>

<F31>checkin<F0> <#1f> rcs check-in utility

<header>

USAGE

<paragraph>

<F31>checkin<F32> [options] [file-specifications]

<header>

SYNOPSIS

<paragraph>

<F31>Checkin<F0> is an extension of the RCS utility <F31>ci<F0>.  
It uses the file's modification date rather than the current date 
as the RCS delta-date.

<header>

DESCRIPTION

<paragraph>

<F31>Checkin<F0> uses the <F32>rcs<F0> utility <F31>ci<F0>.  It 
is normally invoked from the <F31>rcsput<F0> script, but may be invoked 
in a standalone manner.  <F31>Checkin<F0> differs from <F31>ci<F0> 
primarily in its treatment of the delta date: after invoking <F31>ci<F0>, 
<F31>checkin<F0> modifies the delta-date in the archive to reflect 
the file's modification date.

This is the fundamental advantage offered by <F31>checkin<F0>.  The 
ordinary <F32>rcs<F0> methodology uses the current date as the check-in 
date.  This works well only for large projects in which a central 
project administrator is responsible for controlling the versions 
of source files.  It does not work well for small projects, for which <F32>rcs
<F0>'s primary advantage is its compact storage of multiple versions 
of a file.

By using the file's modification date as a reference, you can more 
easily back up to a meaningful version <#1f> by date, rather than 
version number.

<subheader>

<F31@R>Archive Directory

<paragraph>

<F30@R>If the archive directory (e.g., <#7f>./RCS") does not exist, <F31@R>checkin
<F30@R> creates it before invoking the <F31@R>ci<F30@R> program.

<subheader>

<F31@R>Set-UID Operation

<paragraph>

<F30@R>The rcs <F31@R>ci<F30@R> and <F31@R>co<F30@R> utilities work to a degree 
in set-uid mode (i.e., the <#7f>u+s" protection is set on the programs).  
However, the code assumes that the effective uid is <F30@U@R>root<F30@R>, 
and does not concern itself with maintaining file ownership.

<F30@R>The <F31@R>checkin<F30@R> package is able to run as a set-uid process 
for any particular user (e.g., the administrator of a project).  For 
example, suppose that <F49@R>/proj<F30@R> is the location of project-specific 
tools, and is owned by <F49@R>admin<F30@R>.  Then

<fixed>

<F21@R>cp checkin /proj<Tab><Tab># admin now owns this copy<HR>
chmod 4755 /proj/checkin<Tab># sets u+s mode

<paragraph>

<|,2><F30@R>Thereafter, users who invoke <F49@R>/proj/checkin<F30@R> will 
have the rights of <F49@R>admin<F30@R> <#1f> for this application.  They 
may check into <F32@R>rcs<F30@R> any files which they own, into archives 
which <F49@R>admin<F30@R> owns.  <F31@R>Checkin<F30@R> will maintain <F49@R>admin<F30@R>'s 
ownership of the archive files, and the user's ownership of his working 
files.

<subheader>

<F31@R>Sharing RCS Archives

<paragraph>

<F31@R>Checkin<F30@R> provides support for shared files by using <F32@R>rcs<F30@R>'s 
access lists, and providing special handling for set-uid operation:

<bullet>

<F6@R>S<F30@R><Tab>When you first archive a file using <F31@R>checkin<F30@R>, 
it invokes the <F31@R>rcs<F30@R> administrative utility to initialize 
the access list of the file.  It puts the <F30@U@R>effective<F30@R> user 
into the list.

<F6@R>S<F30@R><Tab>If <F31@R>checkin<F30@R> is running in set-uid mode, it 
puts the <F30@U@R>real<F30@R> user on the access list as well.

<paragraph>

<F30@R>With the access list initialized, only those users who appear 
on an access list may place locks on files, even when running in set-uid 
mode.

<header>

OPTIONS

<paragraph>

<F31>Checkin<F0> recognizes all of the <#7f><F31>ci<F0>" options.

<F30@R>If the <#7f>-<F31@R>k<F30@R>" option is used, <F31@R>checkin<F30@R> supplies 
a default log-message

<fixed>

<F21@R>FROM_KEYS

<header>

OPERATIONS

<paragraph>

<F31>Checkin<F0> is used exactly as one would use <F31>ci<F0>.  
Place a lock on the file using the <#7f>-<F31>l<F0>" option with <F31>ci<F0> 
(or with <F31>co<F0>) when you wish to edit a file.  Check the file 
in using the <#7f>-<F31>u<F0>" option to retain a working copy after 
modification.

<header>

ENVIRONMENT

<paragraph>

<F31>Checkin<F0> is a C-language program.  It invokes <F31>ci<F0> 
via an <F32>execlp<F0> call (so that <F31>ci<F0> must be in your 
path), and performs pre- and postprocessing of the archive and working 
file to determine the version to which the file's modification date 
applies.

<F31>Checkin<F0> uses the following environment variables:

<options,
	Left Tab =		0/0.25 inches>

<F49>RCS_BASE<F0><Tab>is used to specify a default value for initial 
revision numbers.  If the user does not specify the initial version 
number of a file, <F31>ci<F0> assigns the value <#7f>1.1".  This 
is used to support the use of module-level version numbers, while 
preserving the relationship between changes and revisions: a new version 
is made only if the file is changed.  See <F32>baseline<F0> for more 
details.

<options>

<|,3><F49@R>RCS_DIR<F30@R><Tab>if defined, specifies the directory in 
which <F32@R>rcs<F30@R> archive files are found.  Normally files are found 
in <#7f>./RCS".

<options,
	Left Tab =		0/0.25 inches>

<F49>TZ<F0><Tab>is the unix time zone, which is overridden internally 
so that file modification dates are independent of the local time 
zone.

<header>

FILES

<paragraph>

<F31>Checkin<F0> uses the following files

<options>

<F49>ci<F0><Tab>the RCS check-in program

<F49@R>rcs<F30@R><Tab>the RCS administrative program

<header>

ANTICIPATED CHANGES

<paragraph>

<F31>Checkin<F0> does not currently handle branch deltas.

<header>

SEE ALSO

<paragraph>

baseline, rcsput, ded, ci<SP>(1), co<SP>(1), rcs<SP>(1)

<header>

AUTHOR:

<paragraph>

Thomas Dickey (Software Productivity Consortium).

